{"version":3,"sources":["components/home.jsx","components/projects.jsx","components/navbar.jsx","components/smaps.jsx","components/moodsic.jsx","components/dicegame.jsx","components/datavisualization.jsx","components/experience.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","className","Component","Projects","Navbar","href","src","alt","width","height","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Smaps","Moodsic","Dicegame","Datavis","Experience","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc76fda4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n        <section className=\"banner-area\">\r\n        <div className=\"container\">\r\n          <div className=\"row fullscreen align-items-center justify-content-between\">\r\n            <div className=\"col-lg-6 col-md-6 banner-left\">\r\n              <h1>Matthew Tang</h1>\r\n              <p>\r\n                I'm a student studying Computer Science and Statistics at the University of Illinois at Urbana-Champaign.\r\n              </p>\r\n            </div>\r\n            {/* <div className=\"col-lg-6 col-md-6 banner-right d-flex align-self-end\">\r\n              <img className=\"img-fluid\" src=\"img/megumin.png\" alt=\"\" />\r\n            </div> */}\r\n          </div>\r\n        </div>\t\t\t\t\t\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Projects extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"projects\">\r\n      <div className=\"container\">\r\n        <div className=\"row fullscreen align-items-center justify-content-between\">\r\n          <div className=\"col-lg-6 col-md-6 banner-left\">\r\n            <h1>Projects</h1>\r\n            <p>\r\n              These are some of the projects I've worked on:\r\n            </p>\r\n          </div>\r\n          <div className=\"col-lg-6 col-md-6 banner-right d-flex align-self-end\">\r\n          </div>\r\n        </div>\r\n      </div>\t\t\t\t\t\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\nexport default class Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand mr-0 mr-md-2\" href=\"#\">\r\n          <img src=\"img/megumin.png\" alt=\"UIUC Logo\" width={24} height={32} className=\"d-inline-block align-top mr-2\" />\r\n          Matthew Tang\r\n        </a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-controls=\"navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbar\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            </li>\r\n            <li className=\"nav-item \">\r\n              <a className=\"nav-link\" href=\"Matthew_Tang_Resume.pdf\">Resume</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"https://github.com/matttang7\">Github</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Smaps extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"smaps\">\r\n      <div className=\"container\">\r\n        <div className=\"row fullscreen align-items-center justify-content-between\">\r\n          <div className=\"col-lg-6 col-md-6 banner-left\">\r\n            <h2>Smaps</h2>\r\n            <p>\r\n              Android app that gets directions without needing wifi or data\r\n              \r\n            </p>\r\n            <p>\r\n            Uses Twilio to send the search, which calls a google cloud function and uses the google maps API to get the directions. Then, it sends the directions back to the phone and displays them.\r\n            </p>\r\n            <p>\r\n              Won best transportation hack at MHacks\r\n            </p>\r\n            <a href=\"https://devpost.com/software/smaps\" className=\"primary-btn text-uppercase\">discover now</a>\r\n          </div>\r\n          <div className=\"col-lg-6 col-md-6 banner-right d-flex align-self-end\">\r\n            <img className=\"img-fluid\" src=\"img/smsmap.jpg\" alt=\"\" /> \r\n            <img className=\"img-fluid\" src=\"img/smaps2.jpg\" alt=\"\" />\r\n          </div>\r\n         \r\n        </div>\r\n      </div>\t\t\t\t\t\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Moodsic extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"Moodsic\">\r\n      <div className=\"container\">\r\n        <div className=\"row fullscreen align-items-center justify-content-between\">\r\n          <div className=\"col-lg-6 col-md-6 banner-left\">\r\n            <h2>Moodsic</h2>\r\n            <p>\r\n            Created an Android Application which takes a picture of a person’s face, sends it to Microsoft’s Face API to detect their emotion, and plays music based on that emotion\r\n              \r\n            </p>\r\n            <p>\r\n              Won Lodgic prize at Pyghack\r\n            </p>\r\n            <a href=\"https://devpost.com/software/moodsic-fmsh5i\" className=\"primary-btn text-uppercase\">discover now</a>\r\n          </div>\r\n          <div className=\"col-lg-6 col-md-6 banner-right d-flex align-self-end\">\r\n            <img className=\"img-fluid\" src=\"img/moodsic.jpg\" alt=\"\" /> \r\n          </div>\r\n         \r\n        </div>\r\n      </div>\t\t\t\t\t\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Dicegame extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"dicegame\">\r\n      <div className=\"container\">\r\n        <div className=\"row fullscreen align-items-center justify-content-between\">\r\n          <div className=\"col-lg-6 col-md-6 banner-left\">\r\n            <h2>Dice Game</h2>\r\n            <p>\r\n            Using Unity and C#, created a 4 player board game where players move based on the card they roll on the die, and battle with monsters on the square they land on. If they win, the square becomes theirs and the game ends when a player reaches the point threshold\r\n            </p>\r\n            <a href=\"https://github.com/matttang7/Dice-Game\" className=\"primary-btn text-uppercase\">discover now</a>\r\n          </div>\r\n          <div className=\"col-lg-6 col-md-6 banner-right d-flex align-self-end\">\r\n            <img className=\"img-fluid\" src=\"img/dicegame.png\" alt=\"\" /> \r\n          </div>\r\n         \r\n        </div>\r\n      </div>\t\t\t\t\t\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Datavis extends Component {\r\n  render() {\r\n    return (\r\n      <section className=\"smaps\">\r\n      <div className=\"container\">\r\n        <div className=\"row fullscreen align-items-center justify-content-between\">\r\n          <div className=\"col-lg-6 col-md-6 banner-left\">\r\n            <h2>Smaps</h2>\r\n            <p>\r\n            Data visualization created with Python for cleaning data and d3.js for visualization to show the change in enrollment of international students at the University of Illinois at Urbana-Champaign from 1990 to 2018. \r\n            Percentages are relative to total international student enrollment. Blue shades represent more male students than female students, vice versa. The area of the circle is proportional to the total enrollment.\r\n            </p>\r\n            <a href=\"https://devpost.com/software/smaps\" className=\"primary-btn text-uppercase\">discover now</a>\r\n          </div>\r\n          <div className=\"col-lg-6 col-md-6 banner-right d-flex align-self-end\">\r\n            <img className=\"img-fluid\" src=\"img/datavisualization.png\" alt=\"\" /> \r\n          </div>\r\n         \r\n        </div>\r\n      </div>\t\t\t\t\t\r\n      </section>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Experience extends Component {\r\n  render() {\r\n    return (\r\n        <section className=\"banner-area\">\r\n        <div className=\"container\">\r\n          <div className=\"row fullscreen align-items-center justify-content-between\">\r\n            <div className=\"col-lg-6 col-md-6 banner-left\">\r\n              <h1>Experience</h1>\r\n              <p>\r\n                National Science Foundation Research Experience for Undergraduates at IUPUI.\r\n                I worked on evaluating the performance of BERT, a relatively new natural language processing model, in extracting key phrases from medical texts.\r\n              </p>\r\n              <a href=\"https://arxiv.org/abs/1910.05786\" className=\"primary-btn text-uppercase\">My Research Paper</a>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-6 banner-right d-flex align-self-end\">\r\n              <img className=\"img-fluid\" src=\"img/nsf.jpg\" alt=\"\" />\r\n            </div>\r\n          </div>\r\n        </div>\t\t\t\t\t\r\n      </section>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport './App.css';\nimport Home from './components/home'\nimport Projects from './components/projects'\nimport Navbar from './components/navbar'\nimport Smaps from './components/smaps'\nimport Moodsic from './components/moodsic'\nimport Dicegame from './components/dicegame'\nimport Datavis from './components/datavisualization'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Experience from './components/experience';\n\nfunction App() {\n  return (\n    <div id=\"colorlib-page\">\n        <div id=\"container-wrap\">\n\t\t\t\t<div id=\"colorlib-main\">\n          <Navbar></Navbar>\n\t\t\t\t\t<Home></Home>\n          <Experience \n          id = \"experience\"\n          ></Experience>\n          <Projects></Projects>\n          <Smaps></Smaps>\n          <Moodsic></Moodsic>\n          <Datavis></Datavis>\n          <Dicegame></Dicegame>\n          \t</div>\n      \t</div>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}